# Python/FastAPI Dockerfile for Agents
# Inherits from base service Dockerfile with agent-specific optimizations

# ================================
# Build Stage
# ================================
FROM python:3.11-slim as builder

# Set environment variables for build
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# ================================
# Production Stage
# ================================
FROM python:3.11-slim as production

# Security: Create non-root user
RUN groupadd --gid 1000 agent && \
    useradd --uid 1000 --gid agent --shell /bin/bash --create-home agent

# Set environment variables for production
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH" \
    PORT=8000 \
    AGENT_TYPE="" \
    LOG_LEVEL=info

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Set working directory
WORKDIR /app

# Copy shared components first (for better layer caching)
COPY --chown=agent:agent src/main/shared/ ./src/main/shared/

# Copy agent-specific code
COPY --chown=agent:agent src/main/agents/${AGENT_TYPE}/ ./src/main/agents/${AGENT_TYPE}/
COPY --chown=agent:agent *.py ./

# Switch to non-root user
USER agent

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run application
CMD ["uvicorn", "src.main.agents.${AGENT_TYPE}.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
